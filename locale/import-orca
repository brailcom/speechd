#!/bin/bash
# coding: utf-8
# Orca symbols import
# Copyright (C) 2020-2025 Samuel Thibault <samuel.thibault@ens-lyon.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

export TEXTDOMAINDIR=/usr/local/share/locale

translation=`LANGUAGE="$lang" gettext -d orca "math symbol" "up arrow"`
if [ -z "$translation" ]; then
    echo "Missing orca translations in $TEXTDOMAINDIR"
    exit 1
fi

num=-math

LANG=C python3 > orca$num.autosym << EOF
from orca.mathsymbols import _arrows
from orca.mathsymbols import _operators
from orca.mathsymbols import _shapes

for sym,name in (_arrows|_operators|_shapes).items():
    print("%s\\tmath symbol %s\\t%s%s" % (sym, name, 'none', ''))
EOF

for lang in base $(cat orca.polist)
do
	echo $lang
	mkdir -p $lang
	(
		cat << EOF
# This file was automatically generated by make import-orca
# DO NOT MODIFY IT!
# See locale/README.md to know how to import dictionaries

# locale/$lang/orca$num.dic
# Copyright (C) 2004-2020 Free Software Foundation, Inc.
# This file is distributed under the same license as the orca package.

symbols:
EOF
		IFS=$'\t'
		cat orca$num.autosym | ( while read -r sym C_version level keep
		do
			CTX=""
			case "$sym" in
				\#*) continue ;;
			esac
			case "$C_version" in
				'') echo ; continue ;;
			esac
			case "$C_version" in
				math\ symbol*)
					CTX="--context=math symbol"
					C_version=${C_version#math symbol }
					;;
			esac
			case "$C_version" in
				'') continue ;;
			esac

			sym="${sym//\\/\\\\}"
			sym="${sym//[/\\[}"
			if [ -n "$keep" ]
			then
				keep=$'\t'"$keep"
			fi

			if ! grep "^$sym	" $lang/symbols.dic > /dev/null 2>&1 \
			&& ! grep "^$sym	" $lang/emojis.dic  > /dev/null 2>&1
			then
				if [ -n "$CTX" ] ; then
				    translation=`LANGUAGE="$lang" gettext -d orca "$CTX" "$C_version"`
				else
				    translation=`LANGUAGE="$lang" gettext -d orca "$C_version"`
				fi

				if [ "$lang" == base -o "$translation" != "$C_version" ]
				then
					printf "%s\t%s\t$level$keep\n" "$sym" "$translation"
				fi
			fi
		done )
	) > $lang/orca$num.dic
	grep $'\t' $lang/orca$num.dic > /dev/null || rm -f $lang/orca$num.dic
done

rm -f orca$num.autosym
