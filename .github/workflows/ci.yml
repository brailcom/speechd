name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: sudo apt-get update ; sudo apt-get install autopoint
                        python3 python3-xdg
                        flite1-dev flite
                        libespeak-dev libespeak-ng-dev
                        libttspico-dev
                        libao-dev libasound2-dev libaudio-dev libpulse-dev libxau-dev libsndfile1-dev
                        libdotconf-dev libglib2.0-dev libltdl-dev systemd
                        gettext help2man texinfo texlive texlive-plain-generic
                        pulseaudio
    - name: autoconf
      run: ./build.sh
    - name: configure
      run: ./configure --prefix=/tmp/foobar
    - name: Store the config
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: config.log
        path: config.log
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: make install -k || true
    - name: make testsuite
      run: make -C src/tests testsuite
    - name: run testsuite
      run: dbus-run-session sh -c '( pulseaudio & cd src/tests ; MALLOC_PERTURB_=1234 ./testsuite )'
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: testsuite
        path: |
          src/tests/testsuite.log
          /home/runner/.cache/speech-dispatcher/log/speech-dispatcher.log
    - name: make distcheck
      run: make distcheck

  testsuite-asan:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: sudo apt-get update ; sudo apt-get install autopoint
                        python3 python3-xdg
                        flite1-dev flite
                        libespeak-dev libespeak-ng-dev
                        libttspico-dev
                        libao-dev libasound2-dev libaudio-dev libpulse-dev libxau-dev libsndfile1-dev
                        libdotconf-dev libglib2.0-dev libltdl-dev systemd
                        gettext help2man texinfo texlive texlive-plain-generic
                        pulseaudio
    - name: autoconf
      run: ./build.sh
    - name: configure
      run: ac_cv_func_malloc_0_nonnull=yes ac_cv_func_realloc_0_nonnull=yes
           CFLAGS="-fsanitize=address -g -Og" CXXFLAGS="-fsanitize=address -g -Og"
           ./configure --prefix=/tmp/foobar
    - name: Store the config
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: config-asan.log
        path: config.log
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: make install -k || true
    - name: make testsuite
      run: make -C src/tests testsuite
    - name: run testsuite
      run: dbus-run-session sh -c '( pulseaudio & cd src/tests ; ASAN_OPTIONS=detect_leaks=0 MALLOC_PERTURB_=1234 ./testsuite )'
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: testsuite-asan
        path: |
          src/tests/testsuite.log
          /home/runner/.cache/speech-dispatcher/log/speech-dispatcher.log

  testsuite-lsan:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: sudo apt-get update ; sudo apt-get install autopoint
                        python3 python3-xdg
                        flite1-dev flite
                        libespeak-dev libespeak-ng-dev
                        libttspico-dev
                        libao-dev libasound2-dev libaudio-dev libpulse-dev libxau-dev libsndfile1-dev
                        libdotconf-dev libglib2.0-dev libltdl-dev systemd
                        gettext help2man texinfo texlive texlive-plain-generic
                        pulseaudio
    - name: autoconf
      run: ./build.sh
    - name: configure
      run: ac_cv_func_malloc_0_nonnull=yes ac_cv_func_realloc_0_nonnull=yes
           CFLAGS="-fsanitize=leak -g -Og" CXXFLAGS="-fsanitize=leak -g -Og"
           ./configure --prefix=/tmp/foobar
    - name: Store the config
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: config-lsan.log
        path: config.log
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: make install -k || true
    - name: make testsuite
      run: make -C src/tests testsuite
    - name: run testsuite
      run: dbus-run-session sh -c '( pulseaudio & cd src/tests ; ASAN_OPTIONS=fast_unwind_on_malloc=0 LSAN_OPTIONS=malloc_context_size=24 MALLOC_PERTURB_=1234 ./testsuite )'
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: testsuite-lsan
        path: |
          src/tests/testsuite.log
          /home/runner/.cache/speech-dispatcher/log/speech-dispatcher.log

  testsuite-tsan:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: sudo apt-get update ; sudo apt-get install autopoint
                        python3 python3-xdg
                        flite1-dev flite
                        libespeak-dev libespeak-ng-dev
                        libttspico-dev
                        libao-dev libasound2-dev libaudio-dev libpulse-dev libxau-dev libsndfile1-dev
                        libdotconf-dev libglib2.0-dev libltdl-dev systemd
                        gettext help2man texinfo texlive texlive-plain-generic
                        pulseaudio
    - name: autoconf
      run: ./build.sh
    - name: configure
      run: CFLAGS="-fsanitize=thread -g -Og" CXXFLAGS="-fsanitize=thread -g -Og"
           ./configure --prefix=/tmp/foobar
    - name: Store the config
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: config-tsan.log
        path: config.log
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: make install -k || true
    - name: make testsuite
      run: make -C src/tests testsuite
    - name: run testsuite
      run: dbus-run-session sh -c '( pulseaudio & cd src/tests ; MALLOC_PERTURB_=1234 ./testsuite )'
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: testsuite-tsan
        path: |
          src/tests/testsuite.log
          /home/runner/.cache/speech-dispatcher/log/speech-dispatcher.log

  testsuite-usan:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: sudo apt-get update ; sudo apt-get install autopoint
                        python3 python3-xdg
                        flite1-dev flite
                        libespeak-dev libespeak-ng-dev
                        libttspico-dev
                        libao-dev libasound2-dev libaudio-dev libpulse-dev libxau-dev libsndfile1-dev
                        libdotconf-dev libglib2.0-dev libltdl-dev systemd
                        gettext help2man texinfo texlive texlive-plain-generic
                        pulseaudio
    - name: autoconf
      run: ./build.sh
    - name: configure
      run: CFLAGS="-fsanitize=undefined -g -Og" CXXFLAGS="-fsanitize=undefined -g -Og"
           ./configure --prefix=/tmp/foobar
    - name: Store the config
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: config-usan.log
        path: config.log
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: make install -k || true
    - name: make testsuite
      run: make -C src/tests testsuite
    - name: run testsuite
      run: dbus-run-session sh -c '( pulseaudio & cd src/tests ; UBSAN_OPTIONS=halt_on_error=1 MALLOC_PERTURB_=1234 ./testsuite )'
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: testsuite-usan
        path: |
          src/tests/testsuite.log
          /home/runner/.cache/speech-dispatcher/log/speech-dispatcher.log

  testsuite-valgrind:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: sudo apt-get update ; sudo apt-get install autopoint
                        python3 python3-xdg
                        flite1-dev flite
                        libespeak-dev libespeak-ng-dev
                        libttspico-dev
                        libao-dev libasound2-dev libaudio-dev libpulse-dev libxau-dev libsndfile1-dev
                        libdotconf-dev libglib2.0-dev libltdl-dev systemd
                        gettext help2man texinfo texlive texlive-plain-generic
                        pulseaudio libtool-bin valgrind
    - name: autoconf
      run: ./build.sh
    - name: configure
      run: CFLAGS="-g -Og" CXXFLAGS="-g -Og" ./configure --prefix=/tmp/foobar
    - name: Store the config
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: config-valgrind.log
        path: config.log
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: make install -k || true
    - name: make testsuite
      run: make -C src/tests testsuite
    - name: run testsuite
      run: dbus-run-session sh -c '( pulseaudio & cd src/tests ; libtool --mode=execute valgrind --track-origins=yes --leak-check=full --error-exitcode=1 ./clibrary ; libtool --mode=execute valgrind --track-origins=yes --leak-check=full --error-exitcode=1 ./clibrary2 ; libtool --mode=execute valgrind --track-origins=yes --leak-check=full --error-exitcode=1 ./long_message )'
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: testsuite-valgrind
        path: |
          src/tests/testsuite.log
          /home/runner/.cache/speech-dispatcher/log/speech-dispatcher.log
